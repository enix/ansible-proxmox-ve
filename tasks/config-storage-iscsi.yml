---

- name: "Install ISCSI tools"
  ansible.builtin.apt:
    name: [ 'open-iscsi', 'multipath-tools']
    state: present

- name: "Change default initiator name"
  ansible.builtin.lineinfile:
    path: /etc/iscsi/initiatorname.iscsi
    regexp: '^(InitiatorName=iqn.1993-08\.)org\.debian(.*)$'
    line: '\1io.enix.{{ ansible_hostname }}\2'
    backrefs: yes
    state: present
    backup: yes

- name: "Configure ISCSI daemon startup"
  ansible.builtin.lineinfile:
    path: /etc/iscsi/iscsid.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    backup: yes
  with_items:
    - regexp: '.*node.startup.*$'
      line: "node.startup = automatic"
  register: iscsid_restart

- name: "Configure ISCSI daemon options"
  ansible.builtin.lineinfile:
    path: /etc/iscsi/iscsid.conf
    backrefs: yes
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} = {{ item.value }}"
    state: "{{ item.state | default('present') }}"
    backup: yes
  with_items: "{{ proxmox_ve__storage_iscsi_options }}"
  register: iscsid_restart

- name: "Configure multipath daemon"
  ansible.builtin.template:
    src: "{{ proxmox_ve__storage_iscsi_multipath_template }}"
    dest: /etc/multipath.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  # notify: restart multipath
  register: multipath_restart

- name: Restart iscsid
  ansible.builtin.service:
    name: iscsid
    state: restarted
  when: iscsid_restart.changed

- name: Restart multipath
  ansible.builtin.service:
    name: multipath-tools
    state: restarted
  when: multipath_restart.changed

- name: "Check ISCSI storage exists"
  ansible.builtin.command: pvesm  list {{ item.name }}
  ignore_errors: yes
  with_items:
    - "{{ proxmox_ve__storage_iscsi }}"
  register: pve_iscsi_list
  changed_when: pve_iscsi_list.rc != 0

- name: "Update proxmox storage configuration"
  ansible.builtin.command: pvesm add iscsi {{ item.item.name }} --portal {{ item.item.portal }} --target {{ item.item.target }}
  when: item.rc != 0
  loop: "{{ pve_iscsi_list.results }}"
  register: pvesm_output
  changed_when: pvesm_output.rc != 0

# unfortunaly there is no way to find a change. rc value always 0 and no stdout
- name: "Set proxmox storage content"
  ansible.builtin.command: pvesm set {{ item.name }} --content none
  with_items:
    - "{{ proxmox_ve__storage_iscsi }}"
  register: pvesm_output
  changed_when: pvesm_output.rc != 0

- name: "Check proxmox storage status"
  ansible.builtin.command: pvesm status
  register: pvesm_output
  changed_when: pvesm_output.rc != 0

- name: "Wait for ISCSI device to come UP, It's time to map volume to LUN in your ISCSI storage system"
  ansible.builtin.wait_for:
    path: "/dev/mapper/{{ item.1.name }}"
    state: present
    delay: 10
    timeout: 3600
  with_subelements:
    - "{{ proxmox_ve__storage_iscsi }}"
    - volumes
